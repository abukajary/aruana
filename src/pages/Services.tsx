import { useMemo, useState } from "react";
import { useTranslation } from "react-i18next";
import { useLocation } from "react-router-dom";
import UTMHandler from "../components/UTMHandler";
import { prices } from "../locales/prices";
import Popup from "../components/PopUp";
import NavLinks from "../components/NavLinks";

interface PricingTableProps {
  title: string;
  headers: string[];
  rows: string[][];
}

const PricingTable: React.FC<PricingTableProps> = ({
  title,
  headers,
  rows,
}) => (
  <div className="mb-12">
    <h3 className="text-2xl font-bold text-[#85848a] mb-4 text-center">
      {title}
    </h3>
    <div className="overflow-x-auto">
      <table className="min-w-full border-collapse">
        <thead>
          <tr className="bg-[#d8d9da]">
            {headers.map((header, idx) => (
              <th
                key={idx}
                className="px-4 py-2 border border-gray-300 text-left font-semibold text-[#85848a]"
              >
                {header}
              </th>
            ))}
          </tr>
        </thead>
        <tbody>
          {rows.map((row, rowIdx) => (
            <tr key={rowIdx} className="odd:bg-white even:bg-[#eeedef]">
              {row.map((cell, cellIdx) => (
                <td
                  key={cellIdx}
                  className="px-4 py-2 border border-gray-300 text-[#333333]"
                >
                  {cell}
                </td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
);

const ServicesPage: React.FC = () => {
  const [isPopupOpen, setIsPopupOpen] = useState(false);
  const { t, i18n } = useTranslation();
  const location = useLocation();
  const isKids = location.pathname.includes("kids");

  const serviceData = useMemo(() => {
    const lang = i18n.language as keyof typeof prices;
    return prices[lang]?.[isKids ? "kids" : "adults"] ?? {};
  }, [isKids, i18n.language]);

  return (
    <>
      <NavLinks />
      <div className="min-h-screen font-montserrat">
        <UTMHandler />
        <header className="bg-white py-6">
          <div className="max-w-7xl mx-auto px-4">
            <h1 className="text-3xl font-bold">
              {t("nav.services", "–£—Å–ª—É–≥–∏")}
            </h1>
          </div>
        </header>

        <Popup
          isOpen={isPopupOpen}
          onClose={() => setIsPopupOpen(false)}
          title="–ê–∫—Ü–∏—è –¥–æ –∫–æ–Ω—Ü–∞ –∞–ø—Ä–µ–ª—è!"
          footerButtons={[
            {
              label: "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é",
              onClick: () => (window.location.href = "/appointment"),
              className:
                "bg-blue-500 text-white hover:bg-blue-600 px-4 py-2 rounded-md",
            },
            {
              label: "–ó–∞–∫—Ä—ã—Ç—å",
              onClick: () => setIsPopupOpen(false),
              className: "bg-gray-300 hover:bg-gray-400 px-4 py-2 rounded-md",
            },
          ]}
        >
          <p className="text-gray-700">
            –ü–æ–¥–∞—Ä–∏—Ç–µ —Å–≤–æ–µ–º—É —Ä–µ–±—ë–Ω–∫—É –∑–∞–±–æ—Ç—É –∏ –∑–¥–æ—Ä–æ–≤—å–µ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!
          </p>
          <ul className="mt-2 text-gray-700 space-y-2">
            <li>
              üéâ –ü–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–∏—ë–º –ù–µ–æ–Ω–∞—Ç–æ–ª–æ–≥–∞ –∏ –ü–µ–¥–∏–∞—Ç—Ä–∞ + –º–∞—Å—Å–∞–∂ 2 –¥–Ω—è –≤
              –ø–æ–¥–∞—Ä–æ–∫.
            </li>
            <li>
              ‚úî –ü–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–∏—ë–º –ø–µ–¥–∏–∞—Ç—Ä–∞ 15 000—Ç–≥ ‚Äì –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –æ—Å–º–æ—Ç—Ä,
              —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
            </li>
            <li>
              ‚úî 2 –¥–Ω–µ–π –º–∞—Å—Å–∞–∂–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫ ‚Äì –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–µ—Ç—Å–∫–∏–π –º–∞—Å—Å–∞–∂.
            </li>
            <li>üîπ –ú–∞—Å—Å–∞–∂ –¥–ª—è –æ–±—â–µ–≥–æ —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞.</li>
            <li>üìÖ –°—Ä–æ–∫–∏ –∞–∫—Ü–∏–∏: 26.03.2025 - 30.04.2025.</li>
            <li>üìç –ê–¥—Ä–µ—Å: –ø—Ä–æ—Å–ø–µ–∫—Ç –î–æ—Å—Ç—ã–∫ 125, Aruana Kids.</li>
            <li>üìû –ó–∞–ø–∏—Å—å: 8771 030 96 53.</li>
          </ul>
        </Popup>

        <main className="max-w-7xl mx-auto px-4 py-8">
          <button
            onClick={() => setIsPopupOpen(true)}
            className="bg-[#85848a] text-white px-4 py-2 rounded-lg shadow-md hover:bg-[#605f65] cursor-pointer"
          >
            –û—Ç–∫—Ä—ã—Ç—å –∞–∫—Ü–∏—é
          </button>
          {"outpatient" in serviceData && (
            <PricingTable
              title={serviceData.outpatient.title}
              headers={serviceData.outpatient.headers}
              rows={serviceData.outpatient.rows}
            />
          )}
          {"stationary" in serviceData && serviceData.stationary && (
            <PricingTable
              title={serviceData.stationary.title}
              headers={serviceData.stationary.headers}
              rows={serviceData.stationary.rows}
            />
          )}
          {"massage" in serviceData && serviceData.massage && (
            <PricingTable
              title={serviceData.massage.title}
              headers={serviceData.massage.headers}
              rows={serviceData.massage.rows}
            />
          )}

          {"packs" in serviceData && serviceData.packs && (
            <>
              <PricingTable
                title={serviceData.packs.title}
                headers={serviceData.packs.headers}
                rows={serviceData.packs.rows}
              />
              {"additional" in serviceData.packs && (
                <PricingTable
                  title={serviceData.packs.additional.title}
                  headers={serviceData.packs.additional.headers}
                  rows={serviceData.packs.additional.rows}
                />
              )}
              {"note" in serviceData.packs && (
                <p className="text-gray-600 mt-4">{serviceData.packs.note}</p>
              )}
            </>
          )}
        </main>
      </div>
    </>
  );
};

export default ServicesPage;
